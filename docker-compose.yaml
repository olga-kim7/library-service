services:
  library:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - db

  redis:
    image: "redis:alpine"
    ports:
      - "${REDIS_PORT:-6379}:6379"
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A config  worker --loglevel=info"
    depends_on:
      - library
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A config beat -l info"
    depends_on:
      - library
      - redis
      - db
    restart: on-failure

  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA

volumes:
  my_db:
  my_media:
